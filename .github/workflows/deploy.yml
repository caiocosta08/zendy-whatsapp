name: Deploy to GCP

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV }}" > .env
          chmod 644 .env

      - name: Build Docker image with docker compose
        run: |
          docker compose build
          docker images | grep zendy-whatsapp  # Verifica se a imagem foi criada

      - name: Save Docker image to tar
        run: |
          docker save -o zendy-whatsapp.tar zendy-whatsapp:latest
          chmod 644 ./zendy-whatsapp.tar

      - name: Copy Docker image and .env to GCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_PRIVATE_KEY }}
          source: "zendy-whatsapp.tar,.env"
          target: "/tmp"

      - name: Deploy and restart application on GCP
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_PRIVATE_KEY }}
          script: |
            # Carrega a imagem Docker
            docker load -i /tmp/zendy-whatsapp.tar
            
            # Para o contêiner atual (se existir)
            docker stop zendy-whatsapp-container || true
            docker rm -f zendy-whatsapp-container || true
            docker container prune -f || true
            
            # Inicia o novo contêiner com o arquivo .env
            docker run -d --name zendy-whatsapp-container -p 3002:3002 \
              --env-file /tmp/.env \
              zendy-whatsapp:latest
            
            # Remove os arquivos temporários
            rm /tmp/zendy-whatsapp.tar /tmp/.env